
var plotting = function(){
    var api= this;
    api.isDone = false;
    var random1 = d3.random.normal(0, .2);

    console.log(random1);
    api.current_value = 0;
    api.finishPlotting = function(callBack){
        api.isDone = true;
        callBack(true);
    },
    api.initPlotting = function(callback){
        api.isDone = false;
        callback(true);
    },
    api.forceToRedraw = function(callback){
        api.isDone == true;
        callback(true);
    },
    api.pushData = function(new_value){
        console.log(new_value);
        api.current_value = new_value;
        //api.data.push(new_value);
    },
    api.realtime_plotting = function(holder, y_min_hollder, y_max_holder, update_interval_holder, holder_width,
                                     holder_height, window_size_holder, title) {
        $(holder).html();
        //api.isDone = false;
        var init_window = function(){return 0;}
        api.data = d3.range(parseInt($(window_size_holder).html())).map(init_window);
        var margin = {top: 20, right: 20, bottom: 20, left: 40},
            width = holder_width - margin.left - margin.right,
            height = holder_height - margin.top - margin.bottom;
        var x = d3.scale.linear()
            .domain([1, parseInt($(window_size_holder).html()) - 2])
            .range([0, width]);

        var y = d3.scale.linear()
            .domain([parseInt($(y_min_hollder).val()), parseInt($(y_max_holder).val())])
            .range([height, 0]);
        var line = d3.svg.line()
            .interpolate("basis")
            .x(function (d, i) {
                return x(i);
            })
            .y(function (d, i) {
                return y(d);
            });

        var svg = d3.select(holder).append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        svg.append("defs").append("clipPath")
            .attr("id", "clip")
            .append("rect")
            .attr("width", width)
            .attr("height", height);
        var axis = svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + y(0) + ")")
            .call(d3.svg.axis().scale(x).orient("bottom"));
        svg.append("g")
            .attr("class", "y axis")
            .call(d3.svg.axis().scale(y).orient("left"));
        var path = svg.append("g")
            .attr("clip-path", "url(#clip)")
            .append("path")
            .datum(api.data)
            .attr("class", "line")
            .attr("d", line);
        svg.append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 0 - margin.left-4 )
            .attr("x", (0 - (height / 2)))
            .attr("dy", "1em")
            .style("text-anchor", "middle")
            .text(title);
        svg.append("text")
            .attr("transform",
            "translate(" + (width/2) + " ," +
            (height+margin.bottom) + ")")
            .style("text-anchor", "middle")
            .text("Window Size");
        svg.append("text")
            .attr("x", (width / 2))
            .attr("y", 0 - (margin.top / 4))
            .attr("text-anchor", "middle")
            .style("font-size", "16px")
            .style("text-decoration", "underline")
            .text(title + " variation within last "+ $(window_size_holder).html() +" frames");

        updateAgain();

        function updateAgain() {
            if(api.isDone)return;
            api.data.push(api.current_value);

            path
                .attr("d", line)
                .attr("transform", null)
                .transition()
                .duration( $(update_interval_holder).html())
                .ease("linear")
                .attr("transform", "translate(" + x(0) + ",0)")
                .each("end", updateAgain);
            api.data.shift();
        }

    }
}

